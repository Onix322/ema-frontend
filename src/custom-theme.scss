// Include theming for Angular Material with `mat.theme()`.
// This Sass mixin will define CSS variables that are used for styling Angular Material
// components according to the Material 3 design spec.
// Learn more about theming and how to use it for your application's
// custom components at https://material.angular.dev/guide/theming
@use '@angular/material' as mat;

:root {
  @include mat.fab-overrides((
    container-elevation-shadow: -4px -4px 5px 0px rgba(0, 0, 0, 0.5),
    container-color: black,
  ));

  @include mat.button-overrides((
    filled-container-color: white,
    filled-label-text-color: balck,
    filled-container-shape: 8px,

    // ðŸ”¹ Culoarea stratului (hover, focus, pressed)
    filled-state-layer-color: #1669c1,

    // ðŸ”¹ OpacitÄƒÈ›ile (hover/focus/pressed)
    filled-hover-state-layer-opacity: 0.08,
    filled-focus-state-layer-opacity: 0.1,
    filled-pressed-state-layer-opacity: 0.12,

    outlined-outline-color: #1a73e8,
    outlined-label-text-color: #1a73e8,
  ));
}

html {
  @include mat.theme((
    color: (
      primary: mat.$azure-palette,
      tertiary: mat.$blue-palette,
    ),
    typography: Roboto,
    density: 0,
  ));

}

body {
  // Default the application to a light color theme. This can be changed to
  // `dark` to enable the dark color theme, or to `light dark` to defer to the
  // user's system settings.
  color-scheme: light;

  // Set a default background, font and text colors for the application using
  // Angular Material's system-level CSS variables. Learn more about these
  // variables at https://material.angular.dev/guide/system-variables
  background-color: var(--mat-sys-surface);
  color: var(--mat-sys-on-surface);
  font: var(--mat-sys-body-medium);

  // Reset the user agent margin.
  margin: 0;
}
